import axios from "axios";
import Router from "./Router";
import { AuthProvider } from 'react-admin';

const authProvider: AuthProvider = {
  login: async ({ username, password }) => {
    try {
      const response = await axios.post(Router.loginPath(), {
        email: username,
        password,
      });

      if (!response.data?.token) {
        throw new Error('Authentication failed: no token received');
      }

      localStorage.setItem("token", response.data.token);
      return Promise.resolve();
    } catch (error) {
      console.error('Login error:', error);
      return Promise.reject('Invalid credentials');
    }
  },

  logout: () => {
    localStorage.removeItem("token");
    return Promise.resolve();
  },

  checkAuth: () => {
    return localStorage.getItem("token") 
      ? Promise.resolve() 
      : Promise.reject({ redirectTo: '/login' });
  },

  checkError: (error) => {
    if (error.status === 401 || error.status === 403) {
      localStorage.removeItem("token");
      return Promise.reject({ redirectTo: '/login' });
    }
    return Promise.resolve();
  },

  getIdentity: async () => {
    const token = localStorage.getItem("token");
    if (!token) throw new Error("Not authenticated");
    
    try {
      const response = await axios.get(Router.userProfilePath(), {
        headers: { Authorization: `Bearer ${token}` }
      });
      return response.data;
    } catch (error) {
      console.error('Failed to fetch identity:', error);
      throw error;
    }
  },

  getPermissions: () => Promise.resolve(""),
};

export default authProvider;